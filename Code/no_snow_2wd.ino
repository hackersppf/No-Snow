/*
Ένα δοκιμαστικό πρόγραμμα για να δούμε πως μπορούμε να κρατάμε το αποχιονιστικό μας μηχάνημα στην ευθεία.
*/

//Προσθέτουμε τις βιβλιοθήκες για την μονάδα IMU (γυροσκόπιο και το επιταχυνσιόμετρο)
#include <MPU6050_tockn.h>
#include <Wire.h>

//Προσθέτουμε την βιβλιοθήκη για τον οδηγό των κινητήρων
#include <AFMotor.h>

//Δηλώνουμε την μονάδα που έχει το γυροσκόπιο και το επιταχυνσιόμετρο με το όνομα imu
MPU6050 imu(Wire);

//Δηλώνουμε τους 2 κινητήρες του οχήματος σε ποιες θέσεις είναι τοποθετημένα
//Αριστερά στην θέση 3
AF_DCMotor motorL(3);
//Δεξιά στην θέση 4
AF_DCMotor motorR(4);

void setup() {
  //Ξεκινάμε την μονάδα IMU
  Wire.begin();
  imu.begin();
  
  //Ζητάμε από την μονάδα να κάνει την αρχική ρύθμιση (θέλει 3 δευτερόλεπτα)
  imu.calcGyroOffsets(true);
  
  //Ενεργοποιούμε τους κινητήρες
  motorR.run(FORWARD);
  motorR.run(FORWARD);
    
}

void loop() {
  //Ζητάμε τις νέες τιμές από το γυροσκόπιο
  imu.update();
  
  //Παρακάτω  θα πρέπει να ελέγξουμε την τιμή της γωνίας Ζ και ανάλογα να ρυθμίσουμε την ταχύτητα των κινητήρων δεξιά και αριστερά
  if (imu.getAngleZ() > 2) {        //Αν η γωνία Ζ είναι μεγαλύτερη από 2 μοίρες (αφού είναι θετική σημαίνει πως το όχημα φεύγει αριστερά)
    motorR.setSpeed(0);             //Σταματάμε τον δεξιό κινητήρα  
    motorL.setSpeed(200);           //Και αφήνουμε να τρέχει ο αριστερός κινητήρας, άρα το όχημα θα στρίψει δεξιά και θα διορθώσει την πορεία του
  } else if (imu.getAngleZ() < -2) {//Αν η γωνία Ζ είναι μικρότερη από 2 μοίρες (αφού είναι αρνητική σημαίνει πως το όχημα φεύγει δεξιά)
    motorR.setSpeed(200);           //Αφήνουμε να τρέχει ο αριστερός κινητήρας
    motorL.setSpeed(0);             //και σταματάμε τον δεξιό κινητήρα,άρα το όχημα θα στρίψει αριστερά και θα διορθώσει την πορεία του  
  } else {                          //Αν η γωνία Ζ είναι μεταξύ 2 και -2 μοιρών τότε δεν υπάρχει μεγάλη απόκλιση και συνεχίζουμε να πηγαίνουμε ευθεία
    motorR.setSpeed(200);
    motorL.setSpeed(200);
  }
    
}
